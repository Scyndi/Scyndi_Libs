// License:
// 	General/datetime.scyndi
// 	Date & Time quick functions
// 	version: 25.07.01
// 
// 	Copyright (C) 2019, 2025 Jeroen P. Broks
// 
// 	This software is provided 'as-is', without any express or implied
// 	warranty.  In no event will the authors be held liable for any damages
// 	arising from the use of this software.
// 
// 	Permission is granted to anyone to use this software for any purpose,
// 	including commercial applications, and to alter it and redistribute it
// 	freely, subject to the following restrictions:
// 
// 	1. The origin of this software must not be misrepresented; you must not
// 	   claim that you wrote the original software. If you use this software
// 	   in a product, an acknowledgment in the product documentation would be
// 	   appreciated but is not required.
// 	2. Altered source versions must be plainly marked as such, and must not be
// 	   misrepresented as being the original software.
// 	3. This notice may not be removed or altered from any source distribution.
// End License


Module
// This module is used a lot and plua locals are faster than globals.
//#pure
plua os = Lua.os
plua tonumber = Lua.tonumber
plua debug = Lua.debug
//#endpure

group Now

	get int Year
		return tonumber(os.date("%Y")) || 1975
	end
	
	get int Month
		return tonumber(os.date("%m")) || 6
	end
	
	get int Day
		return tonumber(os.date("%d")) || 19
	end
	
	get int Hour
		return tonumber(os.date("%H")) || 18
	end
	
	get int Minute
		return tonumber(os.date("%M")) || 30
	end
	
	get int Second
		return tonumber(os.date("%S")) || 0
	end
	
	get int SecStamp
		return os.time()
	end
	
	int tmout
	void StartTimeOut(int MaxTime)
		self.tmout = self.SecStamp + MaxTime
		Lua.assert(self.tmout>self.SecStamp,"Time-Out init error!")
	end
	
	void AssertTimeOut()
		if self.tmout==0 
			return 
		end
		Lua.assert(self.SecStamp<self.tmout,"Time-Out!\n") //..debug.traceback())
	end
	
end

#say "Date Time Loaded"

